apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: emailsvc
      microservice: emailsvc
    name: emailsvc
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: docker.io/vinoalex/emailsvc
      from:
        kind: DockerImage
        name: docker.io/vinoalex/emailsvc
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: emailsvc
      microservice: emailsvc
    name: emailsvc
  spec:
    replicas: 1
    selector:
      app: emailsvc
      deploymentconfig: emailsvc
      microservice: emailsvc
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: emailsvc
          deploymentconfig: emailsvc
          microservice: emailsvc
      spec:
        initContainers:
        - name: initmysqlschema
          image: docker.io/vinoalex/mysqlclient:v08
          command: ["/bin/sh", "-c", "mysql -u$user -p$password -h$host < /opt/sql/my.sql"]
          env:
          - name: host
            valueFrom:
              secretKeyRef:
                key: MYSQL_SERVICE_HOST
                name: mysql-secret
          - name: database
            valueFrom:
              secretKeyRef:
                key: MYSQL_DATABASE
                name: mysql-secret
          - name: password
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: mysql-secret
          - name: user
            valueFrom:
              secretKeyRef:
                key: MYSQL_USER
                name: mysql-secret
            volumeMounts:
            - name: sql
              mountPath: /opt/sql
        volumes:
          - name: sql
            configMap:
               name: myquery
        containers:
        - image: docker.io/vinoalex/emailsvc
          name: emailsvc
          env:
          - name: EMAIL_APPLICATION_DOMAIN
            valueFrom:
              configMapKeyRef:
                 key: EMAIL_APPLICATION_DOMAIN
                 name: mail-config
          - name: database
            valueFrom:
              secretKeyRef:
                key: MYSQL_DATABASE
                name: mysql-secret
          - name: password
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: mysql-secret
          - name: user
            valueFrom:
              secretKeyRef:
                key: MYSQL_USER
                name: mysql-secret
          - name: GMAIL_USERNAME 
            valueFrom:
            secretKeyRef:
              key: GMAIL_USERNAME
              name: email-secret
          - name: GMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: GMAIL_PASSWORD
                name: email-secret
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - emailsvc
        from:
          kind: ImageStreamTag
          name: emailsvc:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: emailsvc
      microservice: emailsvc
    name: emailsvc
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: emailsvc
      deploymentconfig: emailsvc
      microservice: emailsvc
  status:
    loadBalancer: {}
kind: List
metadata: {}
